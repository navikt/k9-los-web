name: Build and deploy K9-los-web
on:
  push:
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENCE'
      - 'nais/proxy/*'
    branches:
      - master

env:
  IMAGE_BASE_CR: ghcr.io/${{ github.repository }}

jobs:
  build-og-deploy:
    name: Deploye til DEV og PROD
    runs-on: ubuntu-latest
    steps:
      - name: Hente kode
        uses: actions/checkout@v3
      - name: Sette opp Node
        uses: actions/setup-node@v3.5.1
        with:
          node-version: 16.x
          registry-url: https://npm.pkg.github.com/
          scope: '@navikt'
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Installere dependencies
        run: yarn install --ignore-optional --no-progress --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN  }}
      - name: Tester
        run: yarn test --maxWorkers=2
      - name: Linting
        run: yarn less:lint
      - name: Bygge dist
        run: yarn build
      - name: Sette Docker-navn og -tag
        run: |
          echo "TAG=$(date +"%Y%m%d%H%M%S")-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Bygg og laste opp docker-image
        run: |
          echo "IMAGE=$IMAGE_BASE_CR:$TAG" >> $GITHUB_ENV
          docker pull node:alpine
          docker build --tag ${IMAGE_BASE_CR}:${TAG} --tag ${IMAGE_BASE_CR}:latest .
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login -u "x-access-token" --password-stdin ghcr.io
          docker push ${IMAGE_BASE_CR} --all-tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploye til dev
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.DEPLOY_KEY }}
          CLUSTER: dev-fss
          RESOURCE: nais/frontend/k9-los-web.yml
          VARS: nais/frontend/dev.json
      - name: Deploye til prod
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.DEPLOY_KEY }}
          CLUSTER: prod-fss
          RESOURCE: nais/frontend/k9-los-web.yml
          VARS: nais/frontend/prod.json
