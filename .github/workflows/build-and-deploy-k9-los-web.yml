name: Build and deploy K9-los-web
on:
  push:
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENCE'
      - 'nais/proxy/*'
    branches:
      - master

env:
  IMAGE_BASE_CR: ghcr.io/${{ github.repository }}

jobs:
  build-og-deploy:
    name: Deploye til DEV og PROD
    runs-on: ubuntu-latest
    steps:
      - name: Hente kode
        uses: actions/checkout@v3
      - name: Sette yarn-config
        run: |
          yarn config set npmScopes.navikt.npmRegistryServer "https://npm.pkg.github.com"
          yarn config set npmScopes.navikt.npmAlwaysAuth true
          yarn config set npmScopes.navikt.npmAuthToken $NPM_AUTH_TOKEN
        env:
          NPM_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: Sette opp Node
        uses: actions/setup-node@v3.8.1
        with:
          node-version: 18.x
          cache: yarn
      - name: Installere dependencies
        run: yarn install --immutable
      - name: CSS lint
        run: yarn css:lint
      - name: Tester
        run: yarn test --maxWorkers=2
      - name: Install Playwright Browsers
        run: yarn playwright install chromium
      - name: Run Playwright tests
        run: yarn playwright test
      - name: Bygge kode
        run: yarn build
        env:
          SAKSBEHANDLER_KAN_VELGE_NYE_KOER: 'disabled'
          AVDELINGSLEDER_TILGANG_TIL_NYE_KOER: 'disabled'
      - name: Sette Docker-navn og -tag
        run: |
          echo "TAG=$(date +"%Y%m%d%H%M%S")-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Bygg og laste opp docker-image
        run: |
          echo "IMAGE=$IMAGE_BASE_CR:$TAG" >> $GITHUB_ENV
          docker pull node:alpine
          docker build --tag ${IMAGE_BASE_CR}:${TAG} --tag ${IMAGE_BASE_CR}:latest .
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login -u "x-access-token" --password-stdin ghcr.io
          docker push ${IMAGE_BASE_CR} --all-tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploye til dev
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.DEPLOY_KEY }}
          CLUSTER: dev-fss
          RESOURCE: nais/frontend/k9-los-web.yml
          VARS: nais/frontend/dev.yml
      - name: Deploye til prod
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.DEPLOY_KEY }}
          CLUSTER: prod-fss
          RESOURCE: nais/frontend/k9-los-web.yml
          VARS: nais/frontend/prod.yml
